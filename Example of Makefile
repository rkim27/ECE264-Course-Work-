WARNING = -Wall -Wshadow --pedantic
ERROR = -Wvla -Werror
GCC = gcc -std=c99 -g $(WARNING) $(ERROR)
VAL = valgrind --tool=memcheck --log-file=memcheck.txt --leak-check=full --verbose

TESTFALGS = 

SRCS = main.c shuffle.c
OBJS = $(SRCS:%.c=%.o)

shuffle: $(OBJS)
	$(GCC) $(TESTFALGS) $(OBJS) -o shuffle

.c.o:
	$(GCC) $(TESTFALGS) -c $*.c

testmemory: shuffle
	$(VAL) ./shuffle 2 2 > output4
#testing only input3 and output3

testall: test1 test2 test3 test4

test1: shuffle
	./shuffle 4 3 | sort | uniq > output43
	diff -w output43 expected/expected_4_3
	

test2: shuffle
	./shuffle 4 5 | sort | uniq > output45
	diff -w output45 expected/expected_4_5

test3: shuffle
	./shuffle 5 2 | sort | uniq > output52
	diff -w output52 expected/expected_5_2

test4: shuffle
	./shuffle 6 2 | sort | uniq > output62
	diff -w output62 expected/expected_6_2

test5: hw09
	./hw09 inputs/input5 output5
	diff output5 expected/expected5

clean: # remove all machine generated files
	rm -f shuffle *.o output?
